package com.money.captainbird.resources;


import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.io.BufferedInputStream;
import org.xml.sax.InputSource;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.andengine.engine.Engine;
import org.andengine.engine.camera.Camera;
import org.andengine.opengl.texture.TextureOptions;
import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas;
import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory;
import org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas;
import org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource;
import org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder;
import org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.TextureAtlasBuilderException;
import org.andengine.opengl.texture.bitmap.AssetBitmapTexture;
import org.andengine.opengl.texture.region.ITextureRegion;
import org.andengine.opengl.texture.region.TextureRegionFactory;
import org.andengine.opengl.vbo.VertexBufferObjectManager;
import org.andengine.util.debug.Debug;

import com.makersf.andengine.extension.collisions.opengl.texture.region.PixelPerfectTextureRegion;
import com.makersf.andengine.extension.collisions.opengl.texture.region.PixelPerfectTextureRegionFactory;
import com.makersf.andengine.extension.collisions.opengl.texture.region.PixelPerfectTiledTextureRegion;
import com.money.captainbird.GameActivity;

public class ResourceManager {
	
	private static final ResourceManager INSTANCE = new ResourceManager();
	
	public SAXHandler handler;
	public static List<Resource> resourceList;
	
	// common objects
	public GameActivity activity;
	public Engine engine;
	public Camera camera;
	public VertexBufferObjectManager vbom;
	
	// Game Texture
	public BuildableBitmapTextureAtlas gameTextureAtlas;
	    
	// Game Texture Regions
	public ITextureRegion back_parallax_region;
	public ITextureRegion mid_parallax_region;
	public ITextureRegion front_parallax_region;
	public PixelPerfectTextureRegion obstacle_region;
	public ITextureRegion landing_region;
	public ITextureRegion coin_region;
	public PixelPerfectTiledTextureRegion copter_region;
	
	
	private ResourceManager() {}
	
	public static ResourceManager getInstance() {
		return INSTANCE;
	}
	
	public void init(GameActivity activity) throws IOException {
		resourceList = new ArrayList<Resource>();
		this.activity = activity;
		this.engine = activity.getEngine();
		this.camera = engine.getCamera();
		this.vbom = engine.getVertexBufferObjectManager();
		try {
			loadLevel(1);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		loadGameGraphics();
	}
	
	public Resource getResource(String name) {
		for (Resource r : resourceList) {
			if(name.equals(r.name))
				return r;
		}
		return null;
	}
	
	public void loadLevel(int i) throws Exception {
		SAXParserFactory parserFactory = SAXParserFactory.newInstance();
		SAXParser parser = parserFactory.newSAXParser();
		handler = new SAXHandler();
		InputStream iStream = activity.getAssets().open("level/load/" + i + ".lvl");
		parser.parse(new InputSource(new BufferedInputStream(iStream)), handler);
	}
	
	private void loadGameGraphics() throws IOException
	{
	    BitmapTextureAtlasTextureRegionFactory.setAssetBasePath("gfx/game/");
	    gameTextureAtlas = new BuildableBitmapTextureAtlas(activity.getTextureManager(), 1024, 1024, TextureOptions.BILINEAR);
	    
	    back_parallax_region = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, "back_parallax.png");
	    mid_parallax_region = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, "mid_parallax.png");
	    front_parallax_region = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, "front_parallax.png");
	    //coin_region = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, "coin.png");
	    obstacle_region = PixelPerfectTextureRegionFactory.createFromAsset(gameTextureAtlas, activity.getAssets(), "gfx/game/pyramid.png", false, 0);
	    landing_region = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, "landing.png");
		
	    Resource x = this.getResource("copter");
	    x.iTextureRegion = PixelPerfectTextureRegionFactory.createTiledFromAsset(gameTextureAtlas, activity.getAssets(), x.image, Integer.parseInt(x.col), Integer.parseInt(x.row), false, 0);
	    copter_region = (PixelPerfectTiledTextureRegion) x.iTextureRegion;
	    
	    Resource y = this.getResource("coin");
	    y.iTextureRegion = BitmapTextureAtlasTextureRegionFactory.createFromAsset(gameTextureAtlas, activity, y.image);
	    coin_region = y.iTextureRegion;
	    /*
		for (Resource r : resourceList) {
			int col = Integer.parseInt(r.col);
			int row = Integer.parseInt(r.row);
			if(r.type.equals("bitmap")) {
				if(r.texture.equals("asset")) {
					r.iTexture = new AssetBitmapTexture(activity.getTextureManager(), activity.getAssets(), r.image);
					r.iTextureRegion = TextureRegionFactory.extractFromTexture(r.iTexture);
					r.iTexture.load();
				}
				else if(r.texture.equals("tiled")) {
					r.iTexture = new AssetBitmapTexture(activity.getTextureManager(), activity.getAssets(), r.image);
					r.iTextureRegion = TextureRegionFactory.extractTiledFromTexture(r.iTexture, col, row);
					r.iTexture.load();
				}
			}
			else if(r.type.equals("pixelperfect")) {
				if(r.texture.equals("asset")) {
					r.iTexture = new AssetBitmapTexture(activity.getTextureManager(), activity.getAssets(), r.image);
					r.iTextureRegion = PixelPerfectTextureRegionFactory.createFromAsset(new BitmapTextureAtlas(activity.getTextureManager(), 1024, 1024), activity.getAssets(), r.image, 0, 0, false, 0);
					r.iTexture.load();
				}
				else if(r.texture.equals("tiled")) {
					r.iTexture = new AssetBitmapTexture(activity.getTextureManager(), activity.getAssets(), r.image);
					r.iTextureRegion = PixelPerfectTextureRegionFactory.createTiledFromAsset(new BitmapTextureAtlas(activity.getTextureManager(), 1024, 1024), activity.getAssets(), r.image, 0, 0, col, row, 0);
					r.iTexture.load();
				}
			}
			Debug.i(r.toString());
		}
		*/
		
		try 
		    {
		        this.gameTextureAtlas.build(new BlackPawnTextureAtlasBuilder<IBitmapTextureAtlasSource, BitmapTextureAtlas>(0, 1, 0));
		        this.gameTextureAtlas.load();
		    } 
		    catch (final TextureAtlasBuilderException e)
		    {
		    	Debug.i("blackpawntexture not loading");
		        Debug.e(e);
		    }
		
		
	}
	
}
